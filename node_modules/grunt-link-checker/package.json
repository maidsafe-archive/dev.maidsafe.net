{
  "name": "grunt-link-checker",
  "version": "0.0.6",
  "description": "Finds broken links and resources on websites",
  "main": "tasks/link-checker.js",
  "scripts": {
    "test": "grunt test"
  },
  "keywords": [
    "grunt",
    "plugin",
    "gruntplugin",
    "link-checker",
    "broken",
    "links",
    "crawler"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/chriswren/grunt-link-checker.git"
  },
  "bugs": {
    "url": "https://github.com/chriswren/grunt-link-checker/issues"
  },
  "author": {
    "name": "Chris Wren"
  },
  "license": "MIT",
  "dependencies": {
    "cheerio": "^0.16.0",
    "colors": "^0.6.2",
    "simplecrawler": "^0.3.8"
  },
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-contrib-connect": "^0.7.1",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-release": "^0.7.0",
    "matchdep": "^0.3.0"
  },
  "readme": "# grunt-link-checker\n\n> Run [node-simple-crawler](https://github.com/cgiffard/node-simplecrawler) to discover broken links on your website.\n\n[![NPM version](https://badge.fury.io/js/grunt-link-checker.png)](http://badge.fury.io/js/grunt-link-checker) [![Dependency Status](https://david-dm.org/ChrisWren/grunt-link-checker.png)](https://david-dm.org/ChrisWren/grunt-link-checker) [![Travis Status](https://travis-ci.org/ChrisWren/grunt-link-checker.png)](https://travis-ci.org/ChrisWren/grunt-link-checker)\n\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-link-checker --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-link-checker');\n```\n\n## Documentation\n\ngrunt-link-checker will by default find any broken internal links on the given `site` and will also find broken [fragment identifiers](en.wikipedia.org/wiki/Fragment_identifier) by using [cheerio](https://github.com/cheeriojs/cheerio) to ensure that an element exists with the given identifier. You can figure more [options that are available via node-simplecrawler](https://github.com/cgiffard/node-simplecrawler#configuring-the-crawler).\n\n### Minimal Usage\nThe minimal usage of grunt-link-checker runs with a `site` specified and an optional `options.initialPort`:\n\n```js\n'link-checker': {\n  dev: {\n    site: 'localhost',\n    options: {\n      initialPort: 9001\n    }\n  }\n}\n```\n\n### Recommended Usage\nIn addition to the above config which tests a local version of your site before deployment, you can add an additional target to run post-deployment. This will verify that your assets were deployed correctly and are being resolved correctly after any revisioning or path modifications during deployment:\n\n```js\n'link-checker': {\n  // Use a large amount of concurrency to speed up check\n  options: {\n    maxConcurrency: 20\n  },\n  dev: {\n    site: 'localhost',\n    options: {\n      initialPort: 9001\n    }\n  },\n  postDeploy: {\n    site: 'mysite.com'\n  }\n}\n```\n\n### Custom options\n\n#### noFragment\nType: `Boolean` Default: `false`\n\nSet this to `true` to speed up your test by not verfiying [fragment identifiers](http://en.wikipedia.org/wiki/Fragment_identifier).\n\n#### callback\nType: `Function`\n\nFunction that receives the instantiated `crawler` object so that you can add [events](https://github.com/cgiffard/node-simplecrawler#events) or other listeners/config to the crawler.\n\n\nHere is an example config using the `callback` option to ignore `localhost` links which have different ports:\n```js\n'link-checker': {\n  dev: {\n    site: 'localhost',\n    options: {\n      initialPort: 9001,\n      callback: function(crawler) {\n        crawler.addFetchCondition(function(url) {\n            return url.port === '9001';\n        });\n      }\n    }\n  }\n}\n```\n### simple-crawler options\nEvery option specified in the node-simplecrawler is available:\n\nhttps://github.com/cgiffard/node-simplecrawler#configuring-the-crawler\n\n## Changelog\n\n**0.0.6** - Added logging for initially fetched URL and logged status codes for failed fetches.\n\n**0.0.5** - Added error reporting if initial `site` URL fails.\n\n**0.0.4** - Added `callback` option.\n\n**0.0.3** - Fixed repo link in package.json and fixed error reporting for a failed initial URL.\n\n**0.0.2** - Added `noFragment` flag.\n\n**0.0.1** - Check to make sure `#` URLs resolve to content with a corresponding id.\n\n**0.0.0** - Initial release\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/chriswren/grunt-link-checker",
  "_id": "grunt-link-checker@0.0.6",
  "_shasum": "125a1efc052ce941685abf6f257c6e3ea4a0ff76",
  "_from": "https://registry.npmjs.org/grunt-link-checker/-/grunt-link-checker-0.0.6.tgz",
  "_resolved": "https://registry.npmjs.org/grunt-link-checker/-/grunt-link-checker-0.0.6.tgz"
}
